const MongoDB = require( 'mongodb' ),
    FormatCollectionName = require( './formatCollectionName' ),
    Aggregation = require( './Aggregation' ),
    On = require('./on.js'),
    Query = require( './query' ),
    Log = require( '../methods/log' ),
    Events = require( '../methods/events' );

module.exports = function dbCollection( collection ) {

    if ( typeof collection !== 'string' ) return undefined;
    if ( ~[ 'inspect', 'valueOf' ].indexOf( collection ) )
        return undefined;

    collection = FormatCollectionName( collection );

    if ( collection == 'objectids' )
        return MongoDB.ObjectId;

    return new Proxy( {}, {

        get( target, action ) {

            if ( typeof action !== 'string' ) return undefined;
            if ( ~[ 'inspect', 'valueOf' ].indexOf( action ) )
                return undefined;

            // Aggregation sugar pipeline builder
            if ( action.toLowerCase() == 'aggregation' )
                return Aggregation( collection );
            if ( action.toLowerCase() == 'match' )
                return a => Aggregation( collection )
                    .match( a );
            if ( action.toLowerCase() == 'search' )
                return a => Aggregation( collection )
                    .search( a );

            if ( action.toLowerCase() == 'on' )
                return On( collection );

            // Query builder
            return Query( collection, action );

        },

        set() {}

    } );
};
