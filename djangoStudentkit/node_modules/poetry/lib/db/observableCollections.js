const Log = require( '../methods/log' ),
    FormatCollectionName = require( './formatCollectionName' );

var OBS_COLLECTIONS = [];

const DEBUG = process.env.debug;

module.exports = {
  get values() {
    let result = [];
    return result.concat(OBS_COLLECTIONS);
  },

  set values(arr) {
    let values = [];
    if (arr) {
      if (arr && Array.isArray(arr)) {
        arr.forEach(v => {
          if (v && typeof v === 'string') {
            values.push(FormatCollectionName(v));
          } else {
            // error
            Log.error(
              '[Observable Collections]:values - %s',
              `Expected non empty type "string". Instead got empty value or type "${typeof v}".`
            );
          }
        });
        OBS_COLLECTIONS = values;
      } else if (typeof arr === 'string') {
        values.push(FormatCollectionName(arr));
        OBS_COLLECTIONS = values;
      } else {
        Log.error(
          '[Observable Collections]:values - %s',
          `Expected non empty type "string" or "string[]". Instead got type "${typeof v}".`
        );
      }
    } else {
      Log.error(
        '[Observable Collections]:values - %s',
        `Expected non empty type "string" or "string[]". Instead got empty value.`
      );
    }

    if (DEBUG) {
      Log.debug('Observable Collections: %o', OBS_COLLECTIONS)
    }
  },

  add(arr) {
    let values = [];
    if (arr) {
      if (arr && Array.isArray(arr)) {
        arr.forEach(v => {
          if (v && typeof v === 'string') {
            v = FormatCollectionName(v);
            if (OBS_COLLECTIONS.indexOf(v) == -1) {
              OBS_COLLECTIONS.push(v);
            }
          } else {
            // error
            Log.error(
              '[Observable Collections]:add - %s',
              `Expected non empty type "string". Instead got empty value or type "${typeof v}".`
            );
          }
        });
      } else if (typeof arr === 'string') {
        arr = FormatCollectionName(arr);
        if (OBS_COLLECTIONS.indexOf(arr) == -1) {
          OBS_COLLECTIONS.push(arr);
        }
      } else {
        Log.error(
          '[Observable Collections]:add - %s',
          `Expected non empty type "string" or "string[]". Instead got type "${typeof v}".`
        );
      }
    } else {
      Log.error(
        '[Observable Collections]:add - %s',
        `Expected non empty type "string" or "string[]". Instead got empty value.`
      );
    }

    if (DEBUG) {
      Log.debug('Observable Collections: %o', OBS_COLLECTIONS)
    }
  },

  contains(v) {
    return OBS_COLLECTIONS.indexOf(v) > -1;
  }
}