[{"C:\\Users\\louka\\Desktop\\Universidad\\PS\\StudioKit\\studio-kit\\src\\index.js":"1","C:\\Users\\louka\\Desktop\\Universidad\\PS\\StudioKit\\studio-kit\\src\\App.js":"2","C:\\Users\\louka\\Desktop\\Universidad\\PS\\StudioKit\\studio-kit\\src\\reportWebVitals.js":"3","C:\\Users\\louka\\Desktop\\Universidad\\PS\\StudioKit\\studio-kit\\src\\components\\RegisterForm.js":"4","C:\\Users\\louka\\Desktop\\Universidad\\PS\\StudioKit\\studio-kit\\src\\components\\RegisterPortada.js":"5","C:\\Users\\louka\\Desktop\\Universidad\\PS\\StudioKit\\studio-kit\\src\\components\\LoginForm.js":"6","C:\\Users\\louka\\Desktop\\Universidad\\PS\\StudioKit\\studio-kit\\src\\components\\Profesorado.js":"7","C:\\Users\\louka\\Desktop\\Universidad\\PS\\StudioKit\\studio-kit\\src\\components\\Footer.js":"8"},{"size":582,"mtime":1678102293363,"results":"9","hashOfConfig":"10"},{"size":722,"mtime":1679057723930,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1677679172829,"results":"12","hashOfConfig":"10"},{"size":3137,"mtime":1678279135008,"results":"13","hashOfConfig":"10"},{"size":687,"mtime":1678105485245,"results":"14","hashOfConfig":"10"},{"size":1966,"mtime":1678279137733,"results":"15","hashOfConfig":"10"},{"size":3412,"mtime":1679314211441,"results":"16","hashOfConfig":"10"},{"size":596,"mtime":1678282678076,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1kk02tn",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"21"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"21"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\louka\\Desktop\\Universidad\\PS\\StudioKit\\studio-kit\\src\\index.js",[],[],[],"C:\\Users\\louka\\Desktop\\Universidad\\PS\\StudioKit\\studio-kit\\src\\App.js",["48","49","50"],[],"import './App.css';\n\nimport { Grid, GridItem } from '@chakra-ui/react'\n\nimport RegisterForm from './components/RegisterForm';\nimport RegisterPortada from './components/RegisterPortada';\n\nimport LoginForm from './components/LoginForm';\n\nimport Profesorado from './components/Profesorado';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Grid templateColumns='repeat(6, 1fr)' gap={5}>\n        <GridItem colSpan={3}>\n          <RegisterForm  />\n        </GridItem>\n        <GridItem colSpan={3}>\n          <RegisterPortada />\n        </GridItem>\n      </Grid>\n    </div>\n  );\n}\n\nfunction DisplayPage() {\n  return (\n    <Profesorado />\n  )\n}\n\nexport default DisplayPage;",[],"C:\\Users\\louka\\Desktop\\Universidad\\PS\\StudioKit\\studio-kit\\src\\reportWebVitals.js",[],[],"C:\\Users\\louka\\Desktop\\Universidad\\PS\\StudioKit\\studio-kit\\src\\components\\RegisterForm.js",["51"],[],"import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { FormControl, FormLabel, FormHelperText, FormErrorMessage, Input } from \"@chakra-ui/react\";\r\nimport { Button, Center } from \"@chakra-ui/react\";\r\n\r\nimport './forms.css'\r\n\r\nfunction RegisterForm() {\r\n    const [usuarioInput, setUsuarioInput] = useState('');\r\n    const [emailInput, setEmailInput] = useState('');\r\n    const [passwordInput, setPasswordInput] = useState('');\r\n    const [confirmPasswordInput, setConfirmPasswordInput] = useState('');\r\n\r\n  \r\n    const handleUsuarioInputChange = (e) => setUsuarioInput(e.target.value);\r\n    const handleEmailInputChange = (e) => setEmailInput(e.target.value);\r\n    const handlePasswordInput = (e) => setPasswordInput(e.target.value);\r\n    const handleConfirmPasswordInput = (e) => setConfirmPasswordInput(e.target.value);\r\n\r\n  \r\n    const isUsuarioError = usuarioInput === '';\r\n    const isEmailError = emailInput === '';\r\n  \r\n    return (\r\n    <Center>\r\n      <div className=\"form\">\r\n        <h1>Crea una cuenta</h1>\r\n        <FormControl>\r\n          <FormLabel>Nombre de usuario</FormLabel>\r\n\r\n          <Input placeholder='Nombre de Usuario' type='usuario' value={usuarioInput} onChange={handleUsuarioInputChange}/>\r\n          {!isUsuarioError ? (\r\n            <FormHelperText>\r\n              Enter your username.\r\n            </FormHelperText>\r\n          ) : (\r\n            <FormErrorMessage>Username is required.</FormErrorMessage>\r\n          )}\r\n\r\n          <FormLabel>Email</FormLabel>\r\n          <Input placeholder='pepe.fernandez110@alu.ulpgc.es' type='email' value={emailInput} onChange={handleEmailInputChange} />\r\n          {!isEmailError ? (\r\n            <FormHelperText>\r\n              Enter the email you'd like to receive the newsletter on.\r\n            </FormHelperText>\r\n          ) : (\r\n            <FormErrorMessage>Email is required.</FormErrorMessage>\r\n          )}\r\n\r\n          <FormLabel>Contraseña</FormLabel>\r\n          <Input type='password' value={passwordInput} onChange={handlePasswordInput} />\r\n          {!isEmailError ? (\r\n            <FormHelperText>\r\n              Enter the email you'd like to receive the newsletter on.\r\n            </FormHelperText>\r\n          ) : (\r\n            <FormErrorMessage>Email is required.</FormErrorMessage>\r\n          )}\r\n\r\n          <FormLabel>Confirmar Contraseña</FormLabel>\r\n          <Input type='password' value={confirmPasswordInput} onChange={handleConfirmPasswordInput} />\r\n          {!isEmailError ? (\r\n            <FormHelperText>\r\n              Enter the email you'd like to receive the newsletter on.\r\n            </FormHelperText>\r\n          ) : (\r\n            <FormErrorMessage>Email is required.</FormErrorMessage>\r\n          )}\r\n\r\n        </FormControl>\r\n          <Button\r\n              size='md'\r\n              height='48px'\r\n              width='200px'\r\n              border='2px'\r\n              borderColor='green.500'\r\n          >\r\n          Registrarse\r\n          </Button>\r\n\r\n          <p>Ya tienes una cuenta?</p>\r\n          <p><a href=\"\">Login</a></p>\r\n        </div>\r\n      </Center>\r\n    )\r\n}\r\n\r\nexport default RegisterForm;","C:\\Users\\louka\\Desktop\\Universidad\\PS\\StudioKit\\studio-kit\\src\\components\\RegisterPortada.js",[],[],"C:\\Users\\louka\\Desktop\\Universidad\\PS\\StudioKit\\studio-kit\\src\\components\\LoginForm.js",["52"],[],"import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { FormControl, FormLabel, FormHelperText, FormErrorMessage, Input } from \"@chakra-ui/react\";\r\nimport { Button, Center } from \"@chakra-ui/react\";\r\n\r\nimport './forms.css'\r\n\r\nfunction LoginForm() {\r\n    const [emailInput, setEmailInput] = useState('');\r\n    const [passwordInput, setPasswordInput] = useState('');\r\n  \r\n    const handleEmailInputChange = (e) => setEmailInput(e.target.value);\r\n    const handlePasswordInput = (e) => setPasswordInput(e.target.value);\r\n  \r\n    const isEmailError = emailInput === '';\r\n  \r\n    return (\r\n    <Center>\r\n      <div className=\"form\">\r\n        <h1>Bienvenido de <br></br> vuelta!</h1>\r\n        <FormControl>\r\n          <FormLabel>Email</FormLabel>\r\n          <Input placeholder='pepe.fernandez110@alu.ulpgc.es' type='email' value={emailInput} onChange={handleEmailInputChange} />\r\n          {!isEmailError ? (\r\n            <FormHelperText>\r\n              Enter the email you'd like to receive the newsletter on.\r\n            </FormHelperText>\r\n          ) : (\r\n            <FormErrorMessage>Email is required.</FormErrorMessage>\r\n          )}\r\n\r\n          <FormLabel>Contraseña</FormLabel>\r\n          <Input type='password' value={passwordInput} onChange={handlePasswordInput} />\r\n          {!isEmailError ? (\r\n            <FormHelperText>\r\n              Enter the email you'd like to receive the newsletter on.\r\n            </FormHelperText>\r\n          ) : (\r\n            <FormErrorMessage>Email is required.</FormErrorMessage>\r\n          )}\r\n\r\n        </FormControl>\r\n          <Button\r\n              size='md'\r\n              height='48px'\r\n              width='200px'\r\n              border='2px'\r\n              borderColor='green.500'\r\n          >\r\n          Login\r\n          </Button>\r\n\r\n          <p>Todavía no tienes una cuenta?</p>\r\n          <p><a href=\"\">Regístrate</a></p>\r\n        </div>\r\n      </Center>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","C:\\Users\\louka\\Desktop\\Universidad\\PS\\StudioKit\\studio-kit\\src\\components\\Profesorado.js",["53","54","55"],[],"  import React, { useState, useEffect } from 'react';\r\n  import { Divider, Box, Heading, Button, Stack, Text, Flex } from '@chakra-ui/react';\r\n  import { Checkbox, useCheckboxGroup, Input, Menu, MenuButton, MenuItem, MenuList } from '@chakra-ui/react';\r\n  import { AiFillGithub } from 'react-icons/ai';\r\n\r\n  import './profesorado.css';\r\n\r\n  function Profesorado() {\r\n    const [data, setData] = useState([]);\r\n    const [isChecked, setIsChecked] = useState([false, false, false, false]);\r\n    const [searchValue, setSearchValue] = useState('');\r\n\r\n    const handleCheckboxChange = (index) => {\r\n      const newChecked = [...isChecked];\r\n      newChecked[index] = !newChecked[index];\r\n      setIsChecked(newChecked);\r\n    };\r\n\r\n    useEffect(() => {\r\n      fetch('https://jsonplaceholder.typicode.com/photos')\r\n        .then(response => response.json())\r\n        .then(data => setData(data))\r\n        .catch(error => console.error(error));\r\n    }, []);\r\n\r\n    const filteredData = data.filter(photo =>\r\n      photo.title.toLowerCase().includes(searchValue.toLowerCase())\r\n    );\r\n\r\n    return (\r\n      <>\r\n\r\n        <Input\r\n            type=\"text\"\r\n            value={searchValue}\r\n            onChange={event => setSearchValue(event.target.value)}\r\n            placeholder=\"Buscar\"\r\n            width='50%'\r\n            borderRadius='10px'\r\n        />\r\n\r\n        <Menu>\r\n          <MenuButton as={Button} rightIcon={<AiFillGithub />}>\r\n            Ordenar por: Item de ordenación\r\n          </MenuButton>\r\n          <MenuList>\r\n            <MenuItem>Ordernar por: curso</MenuItem>\r\n            <MenuItem>Ordenar por: professor</MenuItem>\r\n            <MenuItem>Ordenar por: orden alfabético</MenuItem>\r\n          </MenuList>\r\n        </Menu>\r\n\r\n        <div className='scrollbox'>\r\n          <h1>Hola Mundo</h1>\r\n          {filteredData.map(photo => (\r\n            <div className='info' key={photo.id}>\r\n              <h1>{photo.title}</h1>\r\n              <h2>{photo.thumbnailUrl}</h2>\r\n              <h3>{photo.thumbnailUrl}</h3>\r\n              <Divider orientation='horizontal' />\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className='filtros'>\r\n        <Box bg='gray' w='100%' p={4} color='white'>\r\n        <Flex \r\n          flexDirection='row'\r\n          justifyContent='space-between'\r\n        >\r\n          <Text fontSize='2xl'>Filtros</Text>\r\n          <Button\r\n                size='md'\r\n                border='10px'\r\n                bg='darkgray'\r\n            >\r\n            <AiFillGithub />\r\n          </Button>\r\n        </Flex>\r\n        <Stack pl={6} mt={1} spacing={1}>\r\n          <Checkbox colorScheme='red' defaultChecked>\r\n            Primer Filtro\r\n          </Checkbox>\r\n          <Checkbox colorScheme='green' defaultChecked>\r\n            Segundo Filtro\r\n          </Checkbox>\r\n          <Checkbox colorScheme='green' defaultChecked>\r\n            Tercer Filtro\r\n          </Checkbox>\r\n          <Checkbox colorScheme='green' defaultChecked>\r\n            Cuatro Filtro\r\n          </Checkbox>\r\n        </Stack>\r\n        </Box>\r\n\r\n        <Button\r\n              size='md'\r\n              border='10px'\r\n              width='200px'\r\n              borderColor='orange'\r\n              bg='orange'\r\n              margin='5%'\r\n              padding='5%'\r\n          >\r\n          Aplicar\r\n          </Button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  export default Profesorado;","C:\\Users\\louka\\Desktop\\Universidad\\PS\\StudioKit\\studio-kit\\src\\components\\Footer.js",["56","57","58","59"],[],{"ruleId":"60","severity":1,"message":"61","line":8,"column":8,"nodeType":"62","messageId":"63","endLine":8,"endColumn":17},{"ruleId":"60","severity":1,"message":"64","line":11,"column":8,"nodeType":"62","messageId":"63","endLine":11,"endColumn":14},{"ruleId":"60","severity":1,"message":"65","line":13,"column":10,"nodeType":"62","messageId":"63","endLine":13,"endColumn":13},{"ruleId":"66","severity":1,"message":"67","line":82,"column":14,"nodeType":"68","endLine":82,"endColumn":25},{"ruleId":"66","severity":1,"message":"67","line":54,"column":14,"nodeType":"68","endLine":54,"endColumn":25},{"ruleId":"60","severity":1,"message":"69","line":2,"column":26,"nodeType":"62","messageId":"63","endLine":2,"endColumn":33},{"ruleId":"60","severity":1,"message":"70","line":3,"column":22,"nodeType":"62","messageId":"63","endLine":3,"endColumn":38},{"ruleId":"60","severity":1,"message":"71","line":13,"column":11,"nodeType":"62","messageId":"63","endLine":13,"endColumn":31},{"ruleId":"60","severity":1,"message":"72","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":25},{"ruleId":"66","severity":1,"message":"73","line":15,"column":13,"nodeType":"68","endLine":15,"endColumn":16},{"ruleId":"66","severity":1,"message":"73","line":16,"column":13,"nodeType":"68","endLine":16,"endColumn":16},{"ruleId":"66","severity":1,"message":"73","line":19,"column":13,"nodeType":"68","endLine":19,"endColumn":16},"no-unused-vars","'LoginForm' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","'App' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Heading' is defined but never used.","'useCheckboxGroup' is defined but never used.","'handleCheckboxChange' is assigned a value but never used.","'useState' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md"]